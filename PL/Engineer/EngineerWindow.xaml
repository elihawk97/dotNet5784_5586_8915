<!-- XAML file for EngineerWindow.xaml -->
<!-- Binding the DataContext of the window to the CurrentEngineer property. 
    This enables all child controls to bind to properties of the CurrentEngineer. -->
<Window x:Class="Engineer.EngineerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Engineer"
        mc:Ignorable="d"
        
        Title="EngineerWindow" Height="460" Width="800"
    DataContext="{Binding CurrentEngineer, RelativeSource={RelativeSource Self},
Mode=TwoWay}">

    <!-- Grid layout -->
    <Grid>

        <!-- Inner grid layout -->
        <Grid.RowDefinitions>
        
            <RowDefinition Height="500*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>

            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- ID Label and TextBox for displaying the engineer's ID. 
            The ID field is read-only. -->

            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="0" Content="ID" />
            <TextBox Grid.Column="1" Grid.Row="0" 
                    Text="{Binding Path=Id, Mode=TwoWay, 
                        NotifyOnValidationError=True, ValidatesOnExceptions=True}"

                    HorizontalAlignment="Center" Height="NaN" Margin="3"
                    VerticalAlignment="Center" Width="120"
                    IsReadOnly="True"/>

            <!-- Name Label and TextBox for entering the engineer's name. -->
            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Content="Name"/>
            <TextBox Grid.Column="1" Grid.Row="1" 
                     Text="{Binding Name, Mode=TwoWay, NotifyOnValidationError=true,
                     ValidatesOnExceptions=true}"
                     HorizontalAlignment="Center" Height="NaN" Margin="3"
                     VerticalAlignment="Center" Width="120"/>

            <!-- Email Label and TextBox for entering the engineer's email. -->
            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="2" Content="Email"/>
            <TextBox Grid.Column="1" Grid.Row="2"  
                    Text="{Binding Email, Mode=TwoWay, NotifyOnValidationError=true,
                    ValidatesOnExceptions=true}"
                    HorizontalAlignment="Center" Height="NaN" Margin="3"
                    VerticalAlignment="Center" Width="120"/>

            <!-- Experience Level ComboBox for selecting the engineer's experience level from a predefined list. -->
            <Label  HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="3" Content="Experience Level"/>
            <ComboBox Grid.Column="1" Grid.Row="3" 
                ItemsSource="{Binding Source={StaticResource ExpCollectionKey}}"
                SelectedValue="{Binding Level, Mode=TwoWay, ValidatesOnExceptions=true,
                NotifyOnValidationError=true}"
                HorizontalAlignment="Center" Height="NaN" Margin="3"
                VerticalAlignment="Center" Width="120"/>

            <!-- Cost Label and TextBox for entering the cost associated with the engineer. -->
            <Label HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="0" Grid.Row="4" Content="Cost"/>
            <TextBox  Grid.Column="1" Grid.Row="4" 
                      Text="{Binding Cost, Mode=TwoWay, NotifyOnValidationError=true,
                      ValidatesOnExceptions=true}"
                      HorizontalAlignment="Center" Height="NaN" Margin="3"
                      VerticalAlignment="Center" Width="120"/>
                    
        </Grid>

        <!-- Add/Update Button with dynamic content based on the engineer's ID. 
        This button is used to either add a new engineer or update an existing one's details. -->
        <Button Grid.Row="1" 
                Content="{Binding Id, Mode=OneTime, Converter={StaticResource ConvertIdToContentKey}}"
                HorizontalAlignment="Center" Margin="3,0,0,0"
                VerticalAlignment="Center" Padding="5"
                Width="100"
                Height="50"
                Click="btnAddUpdate_Click"/>
    </Grid>
</Window>
